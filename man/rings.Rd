% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spread-process.R
\docType{methods}
\name{rings}
\alias{rings}
\alias{rings,RasterLayer-method}
\title{Identifies all cells within a ring around the focal cells}
\usage{
rings(landscape, loci = NA_real_, id = FALSE, minRadius = 2,
  maxRadius = 5, allowOverlap = FALSE, returnIndices = FALSE,
  returnDistances = TRUE, ...)

\S4method{rings}{RasterLayer}(landscape, loci = NA_real_, id = FALSE,
  minRadius = 2, maxRadius = 5, allowOverlap = FALSE,
  returnIndices = FALSE, returnDistances = TRUE, ...)
}
\arguments{
\item{landscape}{A \code{RasterLayer} object. This defines the possible locations
for spreading events to start and spread into. This can also
be used as part of \code{stopRule}. Require input.}

\item{loci}{A vector of locations in \code{landscape}. These should be cell indexes.
If user has x and y coordinates, these can be converted with
\code{\link[raster]{cellFromXY}}.}

\item{id}{Logical. If TRUE, returns a raster of events ids.
If FALSE, returns a raster of iteration numbers,
i.e., the spread history of one or more events. NOTE:
this is overridden if \code{returnIndices} is \code{TRUE}.}

\item{minRadius}{Numeric. Minimum radius to be included in the ring. Note:
this is inclusive, i.e., >=}

\item{maxRadius}{Numeric. Maximum radius to be included in the ring. Note:
this is inclusive, i.e., <=}

\item{allowOverlap}{Logical. If \code{TRUE}, then individual events can overlap with one
another, i.e., they do not interact. Currently, this is slower than
if \code{allowOverlap} is \code{FALSE}. Default is \code{FALSE}.}

\item{returnIndices}{Logical. Should the function return a data.table with
indices and values of successful spread events, or
return a raster with values. See Details.}

\item{returnDistances}{Logical. Should the function inclue a column with the
individual cell distances from the locus where that event
started. Default is FALSE. See Details.}

\item{...}{Any other argument passed to \code{spread}}
}
\value{
This will return  a \code{data.table} with columns
as described in \code{spread} when \code{returnIndices = TRUE}.
}
\description{
Identifies the cell numbers of all cells within a ring defined
by minimum and maximum distances from focal cells.
Uses \code{\link{spread}} under the hood, with specific values set.
Under many situations, this will be faster than using
\code{\link[rgeos]{gBuffer}} twice (once for smaller ring and once for
larger ring, then removing the smaller ring cells).
}
\examples{
library(raster)

# Make random forest cover map
emptyRas <- raster(extent(0,1e2,0,1e2), res = 1)

# start from two cells near middle
loci <- (ncell(emptyRas)/2 - ncol(emptyRas))/2 + c(-3, 3)

# Allow overlap
emptyRas[] <- 0
Rings <- rings(emptyRas, loci = loci, allowOverlap = TRUE, returnIndices = TRUE)
# Make a raster that adds together all id in a cell
wOverlap <- Rings[,list(sumEventID=sum(id)),by="indices"]
emptyRas[wOverlap$indices] <- wOverlap$sumEventID
if(interactive())
  Plot(emptyRas, new = TRUE)

# No overlap is default, occurs randomly
emptyRas[] <- 0
Rings <- rings(emptyRas, loci = loci, minRadius = 7, maxRadius = 9, returnIndices = TRUE)
emptyRas[Rings$indices] <- Rings$id
if(interactive())
  Plot(emptyRas, new=TRUE)

# Variable ring widths, including centre cell for smaller one
emptyRas[] <- 0
Rings <- rings(emptyRas, loci = loci, minRadius = c(0,7), maxRadius = c(8, 18),
               returnIndices = TRUE)
emptyRas[Rings$indices] <- Rings$id
if(interactive())
  Plot(emptyRas, new=TRUE)
}
\author{
Eliot McIntire
}
\seealso{
\code{\link{cir}} which uses a different algorithm.
\code{cir} tends to be faster when there are few starting points, \code{rings}
tends to be faster when there are many starting points. Another difference
between the two functions is that \code{rings} takes the centre of the pixel
as the centre of a circle, whereas \code{cir} takes the exact coordinates.
See example.
\code{\link[rgeos]{gBuffer}}
}

